import React from 'react';
import styles from './About.module.scss';
import { loadProject } from '../../context/actions/globalActions';
import { Action } from '../../utils/endpointTypes';

const image1 = require('../../assets/images/newReact.png');
const image2 = require('../../assets/images/testfile.png');
const image3 = require('../../assets/images/spearmintHomepage.png');

const About = ({ dispatch: dispatchToGlobal }: { dispatch: (action: Action) => void }) => {
  const handleChangeBack = () => {
    dispatchToGlobal(loadProject(''));
  };

  return (
    <div id={styles.about}>
      <article className='markdown-body entry-content container-lg' itemProp='text'>
        <p>
          <img
            src='https://camo.githubusercontent.com/041cc375aaaec3fac464f67eb7e154f738485d47/68747470733a2f2f6c68352e676f6f676c6575736572636f6e74656e742e636f6d2f35477232645a58484a646d49694153735077397075742d366d52323065346731674f6b2d6166346b725245614a374e716b5a6e71584c44355167696f74664e48596847526833383748537164686a52777864774f76517a67394368686649725a7a30466478567536676b744274472d7379314d583658713336476d727a755f36475f4b374c44515a'
            alt='spearmint logo'
          />
        </p>
        <p>
          Spearmint helps developers easily create functional React/Redux/Endpoint/Paint Timing/Accessibility
          tests without writing any code. It dynamically converts user inputs into executable Jest
          test code by using DOM query selectors provided by @testing-library.
        </p>
        <h2>How to use</h2>
        <p>Download spearmint @ spearmintjs.com. Available for Mac OS and Windows.</p>
        <p>
          To run React tests generated by spearmint, install the following in your dev dependencies.
        </p>
        <pre>
          <code>npm i -D jest @testing-library/jest-dom @testing-library/react test-data-bot</code>
        </pre>
        <p>
          To run Redux tests generated by spearmint, install the following in your dev dependencies,
          in addition to your React test installations above.
        </p>
        <pre>
          <code>npm i -D redux-mock-store redux-thunk fetch-mock node-fetch</code>
        </pre>
        <p>
          To run Hooks / Context tests generated by spearmint, install the following in your dev
          dependencies, in addition to your React test installations above.
        </p>
        <pre>
          <code>npm i -D @testing-library/react-hooks</code>
        </pre>
        <p>
          To run Endpoint tests generated by spearmint, install the following in your dev
          dependencies.
        </p>
        <pre>
          <code>npm i -D jest supertest</code>
        </pre>
        <p>
          To run Puppeteer tests generated by spearmint, install the following in your dev
          dependencies.
        </p>
        <pre>
          <code>npm i -D jest puppeteer</code>
        </pre>


        <p>
          To run Accessibility tests generated by spearmint on HTML, install the following in your dev dependencies.
        </p>
        <pre>
          <code>npm i -D axe-core regenerator-runtime jest</code>
        </pre>

        <p>
          To run Accessibility tests generated by spearmint on React Components, install the following in your dev dependencies.
        </p>
        <pre>
          <code>npm i -D axe-core regenerator-runtime jest enzyme enzyme-adapter-react-16</code>
        </pre>

        <p>
          To run Accessibility tests generated by spearmint on URL's with Puppeteer, install the following in your dev dependencies.
        </p>
        <pre>
          <code>npm i -D axe-core puppeteer</code>
        </pre>


        <h2>How it works</h2>
        <ol>
          <li>
            On the initial screen, enter the URL of your project and load your application to start
            creating tests.
          </li>
        </ol>
        <p>
          <img
            src={image3}
            alt="Spearmint electron app's homepage"
          />
        </p>
        <ol start={2}>
          <li>
            Utilize our auto-complete, drop-down options, and tooltips features to easily create
            arrangement, action, and assertion test statements for React; reducer, action creator,
            asynchronous action creator, and middleware test statements for Redux; and hooks,
            context, and endpoint test statements.
          </li>
        </ol>
        <p>
          <img src={image1} alt='React test generation page' />
        </p>
        <ol start={3}>
          <li>
            <p>
              Refer to the browser view of your app that is displayed on the right to quickly
              identify values for your selectors and use the file directory to open up a code editor
              view to easily refer to your codebase for props information.
            </p>
          </li>
          <li>
            <p>
              Spearmint will then convert user input to dynamically generate a test file that will
              be saved inside a <strong>tests</strong> folder, which you can use to run ‘npm test’
              on.
            </p>
          </li>
        </ol>
        <p>
          <img src={image2} alt='Puppeteer test generation page' />
        </p>
        <h2>The Spearmint Team</h2>
        <blockquote>
          <p>
            Alfred <a href='https://github.com/astaiglesia'>@astaiglesia</a>  ·  Annie{' '}
            <a href='https://github.com/annieshinn'>@annieshinn</a>  ·  Gabriel{' '}
            <a href='https://github.com/bielchristo'>@bielchristo</a>  ·  Sharon{' '}
            <a href='https://github.com/sharon-zhu'>@sharon-zhu</a>  ·  Tolan{' '}
            <a href='https://github.com/taoantaoan'>@taoantaoan</a> <br></br>
            Ben <a href='https://github.com/bkwak'>@bkwak</a>  ·  Evan{' '}
            <a href='https://github.com/Berghoer'>@Berghoer</a>  ·  Nicolas{' '}
            <a href='https://github.com/nicolaspita'>@nicolaspita</a>  ·  Luis{' '}
            <a href='https://github.com/Luis-KM-Lo'>@Luis-KM-Lo</a>  ·  Sean{' '}
            <a href='https://github.com/Sean-Haverstock'>@Sean-Haverstock</a> <br></br>
            Alex <a href='https://github.com/apark0720'>@apark0720</a>  ·  Charlie{' '}
            <a href='https://github.com/charlie-maloney'>@charlie-maloney</a>  ·  Chloe{' '}
            <a href='https://github.com/HeyItsChloe'>@HeyItsChloe</a>  ·  Cornelius{' '}
            <a href='https://github.com/corneeltron'>@corneeltron</a>  ·  Dave{' '}
            <a href='https://github.com/davefranz'>@davefranz</a> <br></br>
            Johnny <a href='https://github.com/johnny-lim'>@johnny-lim</a>  ·  Julie{' '}
            <a href='https://github.com/julicious100'>@julicious100</a>  ·  Karen{' '}
            <a href='https://github.com/karenpinilla'>@karenpinilla</a>  ·  Linda{' '}
            <a href='https://github.com/lcwish'>@lcwish</a>  ·  Mike{' '}
            <a href='https://github.com/mbcoker'>@mbcoker</a> <br></br>
            Natlyn <a href='https://github.com/natlynp'>@natlynp</a>  ·  Rachel{' '}
            <a href='https://github.com/rachethecreator'>@rachethecreator</a>  ·  Sieun{' '}
            <a href='https://github.com/sieunjang'>@sieunjang</a>  ·  Tristen{' '}
            <a href='https://github.com/twastell'>@twastell</a>
          </p>
        </blockquote>
      </article>
      <div id='container'>
        <button onClick={handleChangeBack}>
          <span className='text'>Home</span>
        </button>
      </div>
    </div>
  );
};

export default About;
